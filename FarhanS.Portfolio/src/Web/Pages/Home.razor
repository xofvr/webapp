@page "/"
@using Microsoft.AspNetCore.Components.Web
@using FarhanS.Portfolio.Web.Models
@inject IJSRuntime JSRuntime
@inject FarhanS.Portfolio.Web.Services.ILinkedInService LinkedInService

<PageTitle>@(Profile?.FullName ?? "Farhan S.") - Software Developer Portfolio</PageTitle>

<!-- Hero section -->
<div class="hero-section py-5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6">
                <h1 class="display-4 fw-bold">@(Profile?.FullName ?? "Farhan S.")</h1>
                <h2 class="text-primary">@(Profile?.Title ?? "Software Developer")</h2>
                <p class="lead my-4">
                    Building modern web applications with cutting-edge technologies.
                </p>
                <div class="d-flex gap-3">
                    <a href="#contact" class="btn btn-primary px-4 py-2">Get In Touch</a>
                    <a href="#projects" class="btn btn-outline-secondary px-4 py-2">See My Work</a>
                </div>
            </div>
            <div class="col-lg-6 text-center">
                <img src="images/profile.jpg" alt="Farhan S." class="img-fluid rounded-circle profile-image shadow-lg" 
                     style="max-width: 300px;" onerror="this.onerror=null; this.src='images/profile-placeholder.jpg';">
            </div>
        </div>
    </div>
</div>

<!-- Main content sections -->
<Virtualize Context="section" ItemsProvider="@GetSectionsAsync">
    <ItemContent>
        @if (section == "about")
        {
            <section id="about" class="py-5">
                <div class="container">
                    <h2 class="section-title">About Me</h2>
                    <div class="row">
                        <div class="col-lg-8 offset-lg-2">
                            <p class="lead">
                                @(Profile?.Summary ?? "I'm a passionate software developer with expertise in modern web technologies.")
                            </p>
                            <p>
                                With a background in software development, I bring a unique perspective that emphasizes both technical 
                                performance and exceptional user experience. My goal is to build applications that are not only 
                                functionally robust but also intuitive and accessible to users.
                            </p>
                        </div>
                    </div>
                </div>
            </section>
        }
        else if (section == "experience")
        {
            <section id="experience" class="py-5 bg-light">
                <div class="container">
                    <h2 class="section-title">Experience</h2>
                    <div class="row">
                        @if (Profile?.Experiences != null && Profile.Experiences.Any())
                        {
                            @foreach (var experience in Profile.Experiences)
                            {
                                <div class="col-lg-6 mb-4">
                                    <div class="card experience-card h-100 border-0 shadow-sm">
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between">
                                                <h3 class="card-title h5">@experience.Title</h3>
                                                <span class="badge bg-primary">@experience.Duration</span>
                                            </div>
                                            <h4 class="card-subtitle mb-2 text-muted h6">@experience.Company</h4>
                                            <p class="card-text">@experience.Description</p>
                                            <div class="mt-3">
                                                <span class="badge bg-light text-dark me-1 mb-1">@experience.Location</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 text-center">
                                <p>Experience data is being loaded...</p>
                            </div>
                        }
                    </div>
                </div>
            </section>
        }
        else if (section == "skills")
        {
            <section id="skills" class="py-5">
                <div class="container">
                    <h2 class="section-title">Skills & Expertise</h2>
                    <div class="row row-cols-1 row-cols-md-3 g-4">
                        @{
                            var skillCategories = Profile?.Skills
                                ?.GroupBy(s => s.Category)
                                ?.OrderBy(g => g.Key)
                                ?.ToList();
                                
                            if (skillCategories != null && skillCategories.Any())
                            {
                                foreach (var category in skillCategories)
                                {
                                    <div class="col">
                                        <div class="card skill-card h-100 shadow-sm">
                                            <div class="card-body">
                                                <h3 class="card-title h5">
                                                    <i class="bi @GetCategoryIcon(category.Key) me-2"></i>@category.Key
                                                </h3>
                                                <div class="mt-3">
                                                    @foreach (var skill in category.OrderByDescending(s => s.Endorsements))
                                                    {
                                                        <span class="badge bg-primary me-1 mb-1">@skill.Name</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="col-12 text-center">
                                    <p>Skills data is being loaded...</p>
                                </div>
                                
                                <!-- Default skills as fallback -->
                                <div class="col">
                                    <div class="card skill-card h-100 shadow-sm">
                                        <div class="card-body">
                                            <h3 class="card-title h5"><i class="bi bi-code-slash me-2"></i>Languages</h3>
                                            <div class="mt-3">
                                                <span class="badge bg-primary me-1 mb-1">C#</span>
                                                <span class="badge bg-primary me-1 mb-1">JavaScript</span>
                                                <span class="badge bg-primary me-1 mb-1">TypeScript</span>
                                                <span class="badge bg-primary me-1 mb-1">HTML/CSS</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="card skill-card h-100 shadow-sm">
                                        <div class="card-body">
                                            <h3 class="card-title h5"><i class="bi bi-braces me-2"></i>Frameworks</h3>
                                            <div class="mt-3">
                                                <span class="badge bg-primary me-1 mb-1">.NET Core</span>
                                                <span class="badge bg-primary me-1 mb-1">Blazor</span>
                                                <span class="badge bg-primary me-1 mb-1">ASP.NET</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="card skill-card h-100 shadow-sm">
                                        <div class="card-body">
                                            <h3 class="card-title h5"><i class="bi bi-hdd me-2"></i>Databases</h3>
                                            <div class="mt-3">
                                                <span class="badge bg-primary me-1 mb-1">MySQL</span>
                                                <span class="badge bg-primary me-1 mb-1">SQL Server</span>
                                                <span class="badge bg-primary me-1 mb-1">MongoDB</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </section>
        }
        else if (section == "education")
        {
            <section id="education" class="py-5 bg-light">
                <div class="container">
                    <h2 class="section-title">Education</h2>
                    <div class="row">
                        @if (Profile?.Education != null && Profile.Education.Any())
                        {
                            @foreach (var education in Profile.Education)
                            {
                                <div class="col-md-6 mb-4">
                                    <div class="card education-card h-100 shadow-sm">
                                        <div class="card-body">
                                            <h3 class="card-title h5">@education.Institution</h3>
                                            <p><strong>@education.Degree</strong> @(!string.IsNullOrEmpty(education.Field) ? $"in {education.Field}" : "")</p>
                                            <p class="text-muted">@education.Duration</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 text-center">
                                <p>Education data is being loaded...</p>
                            </div>
                        }
                    </div>
                </div>
            </section>
        }
        else if (section == "contact")
        {
            <section id="contact" class="py-5 section">
                <div class="container">
                    <h2 class="section-title">Contact Me</h2>
                    <div class="row">
                        <div class="col-lg-6 mb-4">
                            <div class="card contact-card shadow-sm card-equal-height">
                                <div class="card-body d-flex flex-column">
                                    <h3 class="h5 mb-4">Let's Connect</h3>
                                    <form class="flex-grow-1">
                                        <div class="mb-3">
                                            <label for="name" class="form-label">Name</label>
                                            <input type="text" class="form-control" id="name" placeholder="Your Name">
                                        </div>
                                        <div class="mb-3">
                                            <label for="email" class="form-label">Email</label>
                                            <input type="email" class="form-control" id="email" placeholder="your.email@example.com">
                                        </div>
                                        <div class="mb-3">
                                            <label for="message" class="form-label">Message</label>
                                            <textarea class="form-control" id="message" rows="4" placeholder="How can I help you?"></textarea>
                                        </div>
                                        <button type="submit" class="btn btn-primary">Send Message</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 mb-4">
                            <div class="card social-card shadow-sm card-equal-height">
                                <div class="card-body d-flex flex-column justify-content-center">
                                    <h3 class="h5 mb-4">Find Me Online</h3>
                                    <div class="d-flex justify-content-center gap-4 mb-4">
                                        <a href="@(Profile?.ProfileUrl ?? "https://www.linkedin.com/in/m-shakeel014/")" target="_blank" rel="noopener" class="social-link" aria-label="LinkedIn">
                                            <i class="bi bi-linkedin fs-3"></i>
                                        </a>
                                        <a href="https://github.com/xofvr" target="_blank" rel="noopener" class="social-link" aria-label="GitHub">
                                            <i class="bi bi-github fs-3"></i>
                                        </a>
                                    </div>
                                    <p class="mb-4">Email: contact@farhans.dev</p>
                                    <div class="mt-auto text-center">
                                        <p class="text-muted">I'll respond to your message within 24-48 hours</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            
            <footer class="footer py-4 text-center">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-md-5 text-md-start mb-3 mb-md-0">
                            <p class="mb-0">&copy; @DateTime.Now.Year Farhan S. All rights reserved.</p>
                        </div>
                        <div class="col-md-2 text-center mb-3 mb-md-0">
                            <button class="btn theme-btn" @onclick="ToggleTheme" title="Toggle theme">
                                <i class="bi bi-moon-stars"></i>
                            </button>
                        </div>
                        <div class="col-md-5 text-md-end">
                            <p class="mb-0">Made with <i class="bi bi-heart-fill text-danger"></i> using Blazor WebAssembly</p>
                        </div>
                    </div>
                </div>
            </footer>
        }
    </ItemContent>
</Virtualize>

@code {
    private LinkedInProfile? Profile { get; set; }
    private string[] sections = new[] { "about", "experience", "skills", "education", "contact" };

    protected override async Task OnInitializedAsync()
    {
        // Fetch profile data asynchronously
        Profile = await LinkedInService.GetProfileDataAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize smooth scrolling
            await JSRuntime.InvokeVoidAsync("navigationManager.initializeSmoothScroll");
        }
    }

    private ValueTask<ItemsProviderResult<string>> GetSectionsAsync(ItemsProviderRequest request)
    {
        return ValueTask.FromResult(new ItemsProviderResult<string>(
            sections.Skip(request.StartIndex).Take(request.Count),
            sections.Length));
    }
    
    private string GetCategoryIcon(string category)
    {
        return category?.ToLower() switch
        {
            "languages" => "bi-code-slash",
            "frameworks" => "bi-braces",
            "databases" => "bi-hdd",
            "tools" => "bi-tools",
            "cloud" => "bi-cloud",
            "devops" => "bi-gear",
            _ => "bi-star"
        };
    }

    private async Task ToggleTheme()
    {
        await JSRuntime.InvokeVoidAsync("themeManager.toggle");
    }
}